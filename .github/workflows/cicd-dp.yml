name: Package, Publish, and Certify Dynamic Plugin

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - main
  # pull_request:
  #   branches:
  #     - '*'

jobs:
  build:
    name: Build and Publish Dynamic Plugin
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3
        with:
          repository: solo-io/platform-portal-backstage-plugin-backend
          token: ${{ secrets.PLUGIN_REPO_TOKEN }}

      - name: Set up Node.js Environment
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Dependencies
        run: npm install

      - name: Export Dynamic Plugin
        run: npx @janus-idp/cli@latest export-plugin --plugin-name platform-portal-backstage-plugin-backend

      - name: Package Dynamic Plugin as OCI Image
        run: npx @janus-idp/cli@latest package package-dynamic-plugins --tag ${{ secrets.OCI_REGISTRY }}/platform-portal-backstage-plugin-backend:latest

      - name: Log in to OCI Registry
        run: echo ${{ secrets.OCI_REGISTRY_PASSWORD }} | docker login ${{ secrets.OCI_REGISTRY }} -u ${{ secrets.OCI_REGISTRY_USERNAME }} --password-stdin

      - name: Push OCI Image
        run: docker push ${{ secrets.OCI_REGISTRY }}/platform-portal-backstage-plugin-backend:latest

  certify:
    name: Certify Dynamic Plugin
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Log in to OpenShift Cluster
        run: |
          oc login ${{ secrets.OPENSHIFT_CLUSTER_URL }} --token=${{ secrets.OPENSHIFT_TOKEN }}

      - name: Deploy Developer Hub
        run: |
          oc new-project developer-hub || true
          oc apply -f https://raw.githubusercontent.com/redhat-developer/rhdh/main/deploy/developer-hub.yaml
          oc rollout status deployment/developer-hub

      - name: Import OCI Image
        run: |
          oc import-image platform-portal-backstage-plugin-backend:latest \
            --from=${{ secrets.OCI_REGISTRY }}/platform-portal-backstage-plugin-backend:latest \
            --confirm

      - name: Deploy Plugin
        run: |
          oc apply -f - <<EOF
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: platform-portal-backstage-plugin
            namespace: developer-hub
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: platform-portal-backstage-plugin
            template:
              metadata:
                labels:
                  app: platform-portal-backstage-plugin
              spec:
                containers:
                - name: plugin-container
                  image: platform-portal-backstage-plugin-backend:latest
                  ports:
                  - containerPort: 8080
          EOF
          oc rollout status deployment/platform-portal-backstage-plugin

      - name: Run Certification Tests (Placeholder)
        run: |
          echo "Running certification tests..."
          echo "This step will be updated once the certification tooling is implemented."

      - name: Generate Test Report
        id: generate_report
        run: |
          echo "Certification Test Results" > test-report.txt
          echo "--------------------------" >> test-report.txt
          echo "All tests passed (placeholder result)" >> test-report.txt

      - name: Upload Test Report
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test-report.txt

      - name: Cleanup Resources
        if: always()
        run: |
          oc delete all --all -n developer-hub || true
          oc delete project developer-hub || true
